int processImageQueue() {
  dmaChanControlPtr = load(0x116C1C)
  
  if(load(dmaChanControlPtr) & 0x01000000 != 0) // IRQ1 on
    return 1
  
  store(0x116C34, setIRQMask(0))
  
  // empty queue while DMA is ready
  while(load(0x116CD4) != load(0x116CD8) && load(dmaChanControlPtr) & 0x01000000 == 0) { // IRQ1 on
    currentQueueElement = load(0x116CD8)
    nextQueueElement = (currentQueueElement + 1) & 0x3F
    lastQueueElement = load(0x116CD4)
    
    if(nextQueueElement == lastQueueElement && load(0x116C60) == 0)
      proxySetDMAIRQHandler(2, 0)
    
    statusRegPtr = load(0x116C10) // 0x1F801814, GPU Status Register
    while(load(statusRegPtr) & 0x04000000 == 0); // wait till GPU ready to receive command
    
    functionPtr = load(0x1355B4 + currentQueueElement * 96) // option A: 0x0009355C, 
    headerPtr = load(0x1355B8 + currentQueueElement * 96)
    dataPtr = load(0x1355BC + currentQueueElement * 96)
    
    functionPtr(headerPtr, dataPtr)
    
    store(0x116CD8, nextQueueElement)
  }
      
  oldIRQMask = load(0x116C34)
  setIRQMask(oldIRQMask)
  
  if(load(0x116CD4) != load(0x116CD8) 
    && load(dmaChanControlPtr) & 0x01000000 == 0 // IRQ1 on
    && load(0x116C5C) != 0) {
    
    functionPtr = load(0x116C60)
    if(functionPtr != 0) {
      store(0x116C5C, 0)
      functionPtr() // call functionPtr
    }
  }
  
  return (load(0x116CD4) - load(0x116CD8)) & 0x3F // remaining queue size
}

0x00093ddc lui r2,0x8011
0x00093de0 lw r2,0x6c1c(r2)
0x00093de4 addiu r29,r29,0xffe0
0x00093de8 sw r31,0x0018(r29)
0x00093dec sw r17,0x0014(r29)
0x00093df0 sw r16,0x0010(r29)
0x00093df4 lw r2,0x0000(r2)
0x00093df8 lui r16,0x0100
0x00093dfc and r2,r2,r16
0x00093e00 bne r2,r0,0x00094028
0x00093e04 addiu r2,r0,0x0001
0x00093e08 jal 0x00092450
0x00093e0c addu r4,r0,r0
0x00093e10 lui r4,0x8011
0x00093e14 lw r4,0x6cd4(r4)
0x00093e18 lui r3,0x8011
0x00093e1c lw r3,0x6cd8(r3)
0x00093e20 lui r1,0x8011
0x00093e24 beq r4,r3,0x00093f8c
0x00093e28 sw r2,0x6c34(r1)
0x00093e2c lui r2,0x8011
0x00093e30 lw r2,0x6c1c(r2)
0x00093e34 nop
0x00093e38 lw r2,0x0000(r2)
0x00093e3c nop
0x00093e40 and r2,r2,r16
0x00093e44 bne r2,r0,0x00093f8c
0x00093e48 nop
0x00093e4c lui r17,0x0400
0x00093e50 lui r16,0x0100
0x00093e54 lui r2,0x8011
0x00093e58 lw r2,0x6cd8(r2)
0x00093e5c lui r3,0x8011
0x00093e60 lw r3,0x6cd4(r3)
0x00093e64 addiu r2,r2,0x0001
0x00093e68 andi r2,r2,0x003f
0x00093e6c bne r2,r3,0x00093e90
0x00093e70 nop
0x00093e74 lui r2,0x8011
0x00093e78 lw r2,0x6c60(r2)
0x00093e7c nop
0x00093e80 bne r2,r0,0x00093e90
0x00093e84 addiu r4,r0,0x0002
0x00093e88 jal 0x000923ac
0x00093e8c addu r5,r0,r0
0x00093e90 lui r3,0x8011
0x00093e94 lw r3,0x6c10(r3)
0x00093e98 nop
0x00093e9c lw r2,0x0000(r3)
0x00093ea0 nop
0x00093ea4 and r2,r2,r17
0x00093ea8 bne r2,r0,0x00093ec4
0x00093eac lui r4,0x0400
0x00093eb0 lw r2,0x0000(r3)
0x00093eb4 nop
0x00093eb8 and r2,r2,r4
0x00093ebc beq r2,r0,0x00093eb0
0x00093ec0 nop
0x00093ec4 lui r5,0x8011
0x00093ec8 lw r5,0x6cd8(r5)
0x00093ecc lui r3,0x8011
0x00093ed0 lw r3,0x6cd8(r3)
0x00093ed4 nop
0x00093ed8 sll r2,r3,0x01
0x00093edc addu r2,r2,r3
0x00093ee0 sll r2,r2,0x05
0x00093ee4 sll r3,r5,0x01
0x00093ee8 addu r3,r3,r5
0x00093eec lui r4,0x8013
0x00093ef0 addu r4,r4,r2
0x00093ef4 lw r4,0x55b8(r4)
0x00093ef8 lui r5,0x8011
0x00093efc lw r5,0x6cd8(r5)
0x00093f00 sll r3,r3,0x05
0x00093f04 sll r2,r5,0x01
0x00093f08 addu r2,r2,r5
0x00093f0c sll r2,r2,0x05
0x00093f10 lui r5,0x8013
0x00093f14 addu r5,r5,r2
0x00093f18 lw r5,0x55bc(r5)
0x00093f1c lui r2,0x8013
0x00093f20 addu r2,r2,r3
0x00093f24 lw r2,0x55b4(r2)
0x00093f28 nop
0x00093f2c jalr r2,r31
0x00093f30 nop
0x00093f34 lui r2,0x8011
0x00093f38 lw r2,0x6cd8(r2)
0x00093f3c nop
0x00093f40 addiu r2,r2,0x0001
0x00093f44 andi r2,r2,0x003f
0x00093f48 lui r1,0x8011
0x00093f4c sw r2,0x6cd8(r1)
0x00093f50 lui r3,0x8011
0x00093f54 lw r3,0x6cd4(r3)
0x00093f58 lui r2,0x8011
0x00093f5c lw r2,0x6cd8(r2)
0x00093f60 nop
0x00093f64 beq r3,r2,0x00093f8c
0x00093f68 nop
0x00093f6c lui r2,0x8011
0x00093f70 lw r2,0x6c1c(r2)
0x00093f74 nop
0x00093f78 lw r2,0x0000(r2)
0x00093f7c nop
0x00093f80 and r2,r2,r16
0x00093f84 beq r2,r0,0x00093e54
0x00093f88 nop
0x00093f8c lui r4,0x8011
0x00093f90 lw r4,0x6c34(r4)
0x00093f94 jal 0x00092450
0x00093f98 nop
0x00093f9c lui r3,0x8011
0x00093fa0 lw r3,0x6cd4(r3)
0x00093fa4 lui r2,0x8011
0x00093fa8 lw r2,0x6cd8(r2)
0x00093fac nop
0x00093fb0 bne r3,r2,0x0009400c
0x00093fb4 nop
0x00093fb8 lui r2,0x8011
0x00093fbc lw r2,0x6c1c(r2)
0x00093fc0 nop
0x00093fc4 lw r2,0x0000(r2)
0x00093fc8 lui r3,0x0100
0x00093fcc and r2,r2,r3
0x00093fd0 bne r2,r0,0x0009400c
0x00093fd4 nop
0x00093fd8 lui r3,0x8011
0x00093fdc addiu r3,r3,0x6c5c
0x00093fe0 lw r2,0x0000(r3)
0x00093fe4 nop
0x00093fe8 beq r2,r0,0x0009400c
0x00093fec nop
0x00093ff0 lw r4,0x0004(r3)
0x00093ff4 nop
0x00093ff8 beq r4,r0,0x0009400c
0x00093ffc addiu r2,r3,0xfff8
0x00094000 sw r0,0x0008(r2)
0x00094004 jalr r4,r31
0x00094008 nop
0x0009400c lui r2,0x8011
0x00094010 lw r2,0x6cd4(r2)
0x00094014 lui r3,0x8011
0x00094018 lw r3,0x6cd8(r3)
0x0009401c nop
0x00094020 subu r2,r2,r3
0x00094024 andi r2,r2,0x003f
0x00094028 lw r31,0x0018(r29)
0x0009402c lw r17,0x0014(r29)
0x00094030 lw r16,0x0010(r29)
0x00094034 jr r31
0x00094038 addiu r29,r29,0x0020
